//*
// Word Banner
// @Author Winson Vetsavong
// @Author Miles
//

#include "Timer.h"
#include "lcd.h"
#include "string.h"

#define DELAY_TIME 300
#define LCD_WIDTH 20

char banner[] = "Microcontrollers are cool!";

//void bannerText(void) {
//    int i;
//    int bannerLength = strlen(banner);
//
//    char display [LCD_WIDTH + 1];
//    while(1) {
//        while(i < bannerLength + LCD_WIDTH) {
//            int j = 0;
//            while (j < LCD_WIDTH) {
//                int bannerIndex = (i + j) % (bannerLength + 4);
//
//                if (bannerIndex >= 0 && bannerIndex < bannerLength) {
//                    display[j] = banner[bannerIndex];
//                } else {
//                    display[j] = ' ';
//                }
//                j++;
//            }
////        for (i = 0; i < bannerLength; i++) {
////            int j;
////            for(j = 0; j < LCD_WIDTH ; j++) {
////                    int bannerIndex = (i+j) % (bannerLength);
////                    if (bannerIndex < bannerLength) {
////                        display[j] = banner[bannerIndex];
////                    } else {
////                        display[j] = ' ';
////                    }
////            }
////        }
//        display[LCD_WIDTH] = '\0';
//        lcd_clear();
//        lcd_puts(display);
//        timer_waitMillis(DELAY_TIME);
//        }
//    }

    void scrollBanner(void) {
        int msgLen = strlen(message), totalLen = msgLen + LCD_WIDTH;
        char display[LCD_WIDTH + 1];

        while (1) {
            // Step 1: Scroll message from the right
            for (int i = 0; i < totalLen; i++) {
                for (int j = 0; j < LCD_WIDTH; j++) {
                    int idx = i + j - LCD_WIDTH + 1;
                    display[j] = (idx >= 0 && idx < msgLen) ? message[idx] : ' ';
                }
                display[LCD_WIDTH] = '\0';   // Null-terminate the string
                lcd_printf("%s", display);   // Display on the first line
                timer_waitMillis(DELAY_TIME);  // Wait for 300ms

                // Ensure the second line is always blank
                lcd_gotoLine(2);
                lcd_printf("");
            }

            // Step 2: Wait 300ms after the message is completely off the screen
            timer_waitMillis(DELAY_TIME);
        }
    }



int main (void) {

    timer_init(); // Initialize Timer, needed before any LCD screen functions can be called
                  // and enables time functions (e.g. timer_waitMillis)

    lcd_init();   // Initialize the the LCD screen.  This also clears the screen.

    bannerText();

    return 0;

    }
